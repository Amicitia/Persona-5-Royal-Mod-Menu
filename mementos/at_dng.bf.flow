
// 
// FlowScript decompiled by AtlusScriptLib by TGE (2017)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "../ModMenu.msg" );
import( "../ModMenu.flow" );
import( "at_dng.bf.msg" );

// 
// Script-level variable definitions
// 

int variable50;
int variable51;
int variable52;
int variable53;
int variable54;
int variable55;
int variable56;
int variable57;
int variable47;
int variable48;
int variable63;
int variable26;

// 
// Procedure declarations
// 

void at_dng_square_menu()
{
    //auto_recover();
	ModMenuDisplay();
}

void CallOriginalSquareMenu()
{
	auto_recover();
}

void SUB_MoruShowFace()
{
    
    if ( FLD_CHECK_MORGANA_BAG() == 1 )
    {
        int localVariable35 = FLD_PC_GET_CURRENT_RESHND( 0 );
        int localVariable36 = MDL_GET_ITEM_RESHND( localVariable35, 2 );
        MDL_ANIM( localVariable36, 50, 0, 0, 1f );
        MDL_ANIM_NEXT( localVariable36, 51, 1, 0, 1f );
    }

}


void SUB_MoruReturnBag()
{
    
    if ( FLD_CHECK_MORGANA_BAG() == 1 )
    {
        int localVariable37 = FLD_PC_GET_CURRENT_RESHND( 0 );
        int localVariable38 = MDL_GET_ITEM_RESHND( localVariable37, 2 );
        MDL_ANIM( localVariable38, 52, 0, 5, 1f );
        MDL_ANIM_NEXT( localVariable38, 0, 1, 0, 1f );
    }

}

void Fld_FadeOut_CallCalendar()
{
    FADEOUT( 15, 10 );
    FADE_SYNC();
}

void at_dng_r_menu()
{
    int localVariable0 = 0;
    int localVariable1 = FLD_GET_MAJOR();
    int localVariable2 = FLD_GET_MINOR();
    int localVariable3 = FLD_GET_DNG_NO();
    int localVariable4 = FLD_GET_DNG_LEVEL();
    localVariable0 = 0;
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 88 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 89 ) )
    {
        localVariable0 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1808 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1809 ) )
    {
        localVariable0 = 1;
    }
    else if ( localVariable3 == 10 )
    {
        localVariable0 = 1;
    }

    
    if ( localVariable0 == 0 )
    {
        Field_SHORTCUT();
    }

}


void at_dng_up_menu()
{
}


void at_dng_down_menu()
{
}


void at_dng_left_menu()
{
}


void at_dng_right_menu()
{
}


void at_dng_start_menu()
{
    
    if ( FLD_CHECK_SAVE_ENABLE() )
    {
        FLD_PANEL_DISP( 0 );
        SAVE();
        SAVE_UI_SYNC();
        SAVE_SYNC();
        FLD_PANEL_DISP( 1 );
    }

}


void at_dng_after_battle()
{
}


void at_dng_escape()
{
    FLD_ESCAPE_EFFECT();
    BIT_OFF( 0 + 0x0800 + 0x0800 + 14 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 15 );
    CALL_FIELD( 190, 1, 1, 0 );
}


void at_dng_sneaking_item()
{
    int localVariable5 = FLD_GET_SNEAKING_ITEM_ID();
    
    if ( localVariable5 == 12288 + 101 )
    {
        at_dng_escape();
    }
    else if ( localVariable5 >= 12288 + 103 && localVariable5 <= 12288 + 105 )
    {
        FLD_START_SMK_BALL( localVariable5 - 12288 + 103 );
    }
    else if ( localVariable5 == 12288 + 340 )
    {
        FLD_START_SMK_BALL( 3 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 93 );
    }

}


void at_dng_leave()
{
    ALERT_MAX_EXIT();
    FADEOUT( 15, 10 );
    FADE_SYNC();
    dungeon_return();
    dungeon_exit_time_set();
    
    if ( CHK_DAYS( 4, 2 ) == 1 )
    {
        CALL_FIELD( 2, 5, 10, 0 );
    }
    else 
    {
        CALL_CALENDAR();
    }

}


void at_dng_alert_up()
{
    MSG_WND_DSP();
    MSG( MSG_ALERT_UP, 0 );
    MSG_WND_CLS();
}


void at_dng_alert_down()
{
    MSG_WND_DSP();
    MSG( MSG_ALERT_DOWN, 0 );
    MSG_WND_CLS();
}


void at_dng_sobj_recover()
{
    sobj_recover();
}


void at_dng_map_search()
{
    FLD_PLACENAME_TEX_EXIT();
    FLD_PLACENAME_TEX_WAIT();
    int localVariable6 = MAP_SEARCH0 + RND( 2 );
    FLD_REPORT_MSG_DTL( 8, 1, localVariable6, 0 );
    FLD_WAIT( 30 );
    FLD_MAP_SEARCH();
    FLD_REPORT_MSGSYNC_DTL( 8, 1, localVariable6, 0 );
    FLD_REPORT_FREE();
    MSG_WND_DSP();
    MSG_SYSTEM( MAP_SYSTEM );
    MSG_WND_CLS();
}


void at_dng_tbox()
{
    int localVariable7 = FLD_GET_TBOX_TYPE();
    int localVariable8 = 0;
    int localVariable10 = 0;
    
    if ( localVariable7 == 0 )
    {
        common_dng_tbox();
    }
    else if ( localVariable7 == 1 )
    {
        rare_dng_tbox();
    }
    else if ( localVariable7 == 3 )
    {
        localVariable8 = FLD_OBJ_GET_RESHND();
        int localVariable9 = FLD_GET_TBOX_FLAG();
        localVariable10 = FLD_GET_DNG_AREA_DIR();
        
        if ( localVariable10 != 0 )
        {
            FLD_GET_SCH_OBJ_BEGIN( localVariable8 );
            FLD_GET_SCH_OBJ_ITEM( -1 );
            FLD_GET_SCH_OBJ_END();
        }
        else 
        {
            FLD_GET_SCH_OBJ_ITEM( -1 );
            MDL_ANIM( localVariable8, 1, 0, 0, 1f );
            MDL_ANIM_NEXT( localVariable8, 2, 1, 0, 1f );
        }

        BIT_ON( localVariable9 );
        return;
    }

}


void at_dng_wall()
{
    FLD_BREAK_WALL();
}


void common_dng_tbox()
{
    SET_COUNT( 182, GET_COUNT( 182 ) + 1 );
    int localVariable11 = FLD_GET_TBOX_FLAG();
    
    if ( localVariable11 == 0 )
    {
        return;
    }
    else if ( !BIT_CHK( localVariable11 ) )
    {
        BIT_ON( localVariable11 );
        FLD_OPEN_TBOX_SIMPLE();
        dng_tbox_seq();
    }

}


void rare_dng_tbox()
{
    int localVariable12 = FLD_GET_TBOX_FLAG();
    int localVariable13 = 0;
    int localVariable15 = 0;
    int localVariable18 = 0;
    int localVariable14 = 0;
    
    if ( localVariable12 == 0 )
    {
        return;
    }
    else if ( !BIT_CHK( localVariable12 ) )
    {
        int localVariable16 = FLD_PC_GET_RESHND( 0 );
        int localVariable17 = FLD_OBJ_GET_RESHND();
        FLD_MODEL_UNIT_POINT_ROTATE( localVariable16, FLD_MODEL_GET_X_TRANSLATE( localVariable17 ), FLD_MODEL_GET_Y_TRANSLATE( localVariable17 ), FLD_MODEL_GET_Z_TRANSLATE( localVariable17 ), 0 );
        FLD_MODEL_SYNC_ROTATE( localVariable16 );
        FLD_UNIT_SET_WAIT( localVariable16 );
        WAIT( 5 );
        MSG_WND_DSP();
        localVariable13 = RARE_TBOX_MSG_M;
        MSG( localVariable13 + 0, 0 );
        localVariable15 = GET_ITEM_NUM( 12288 + 336 );
        localVariable18 = GET_ITEM_NUM( 12288 + 337 );
        
        if ( localVariable18 > 0 )
        {
            SET_MSG_VAR( 0, 12288 + 337, 1 );
            MSG( RARE_TBOX_MSG_AQKEYPICK_, 0 );
            MSG_WND_CLS();
            SET_COUNT( 167, GET_COUNT( 167 ) + 1 );
            localVariable12 = FLD_GET_TBOX_FLAG();
            
            if ( localVariable12 == 0 )
            {
                return;
            }
            else if ( !BIT_CHK( localVariable12 ) )
            {
                BIT_ON( localVariable12 );
                FLD_OPEN_TBOX();
                dng_tbox_seq();
            }

            
            if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 4082 ) )
            {
                BIT_ON( 0 + 0x0800 + 0x0800 + 4082 );
            }

        }
        else if ( localVariable15 > 0 )
        {
            SET_MSG_VAR( 0, 12288 + 336, 1 );
            SET_MSG_VAR( 1, localVariable15, 0 );
            MSG( localVariable13 + 2, 0 );
            SEL_DEFKEY( 14, 1 );
            localVariable14 = SEL( RARE_TBOX_YES_NO );
            MSG_WND_CLS();
            
            if ( localVariable14 == 0 )
            {
                SET_ITEM_NUM( 12288 + 336, localVariable15 - 1 );
                SET_COUNT( 167, GET_COUNT( 167 ) + 1 );
                localVariable12 = FLD_GET_TBOX_FLAG();
                
                if ( localVariable12 == 0 )
                {
                    return;
                }
                else if ( !BIT_CHK( localVariable12 ) )
                {
                    BIT_ON( localVariable12 );
                    FLD_OPEN_TBOX();
                    dng_tbox_seq();
                }

            }

            
            if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 4082 ) )
            {
                BIT_ON( 0 + 0x0800 + 0x0800 + 4082 );
            }

        }
        else 
        {
            SET_MSG_VAR( 0, 12288 + 336, 1 );
            
            if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 4082 ) )
            {
                MSG_WND_DSP();
                MSG( RARE_TBOX_MSG_NO_KEY_1ST, 0 );
                MSG_WND_CLS();
                BIT_ON( 0 + 0x0800 + 0x0800 + 4082 );
                localVariable12 = FLD_GET_TBOX_FLAG();
                
                if ( localVariable12 == 0 )
                {
                    return;
                }
                else if ( !BIT_CHK( localVariable12 ) )
                {
                    BIT_ON( localVariable12 );
                    MSG_WND_DSP();
                    MSG( RARE_TBOX_MSG_NO_KEY_SER, 0 );
                    localVariable14 = SEL( RARE_TBOX_NO_KEY_SERVICE );
                    MSG_WND_CLS();
                    
                    if ( localVariable14 == 0 )
                    {
                        MSG_WND_DSP();
                        MSG( RARE_TBOX_MSG_NO_KEY_SER, 0 );
                    }
                    else 
                    {
                        MSG_WND_DSP();
                        MSG( RARE_TBOX_MSG_NO_KEY_SER, 0 );
                    }

                    MSG_WND_CLS();
                    FLD_OPEN_TBOX();
                    dng_tbox_seq();
                }

            }
            else 
            {
                MSG( localVariable13 + 1, 0 );
            }

            MSG_WND_CLS();
        }

    }

}


void dng_tbox_seq()
{
    dng_tbox_Tutorial();
    dng_tbox_flag_set();
}


void dng_tbox_Tutorial()
{
    int localVariable19 = 0;
    int localVariable20 = 0;
    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 4081 ) )
    {
        localVariable19 = 0;
        _49:
        
        if ( localVariable19 < 4 )
        {
            localVariable20 = FLD_GET_TBOX_ITEM_ID( localVariable19 );
            
            if ( localVariable20 == 0x1000 + 14 || localVariable20 == 0x1000 + 15 || localVariable20 == 0x1000 + 48 || localVariable20 == 0x1000 + 49 || localVariable20 == 0x1000 + 68 || localVariable20 == 0x1000 + 69 || localVariable20 == 0x1000 + 88 || localVariable20 == 0x1000 + 89 || localVariable20 == 0x1000 + 108 || localVariable20 == 0x1000 + 109 || localVariable20 == 0x1000 + 0x80 || localVariable20 == 0x1000 + 129 || localVariable20 == 0x1000 + 148 || localVariable20 == 0x1000 + 149 || localVariable20 == 0x1000 + 168 || localVariable20 == 0x1000 + 169 || localVariable20 == 0x1000 + 188 || localVariable20 == 0x1000 + 189 )
            {
                MSG_WND_DSP();
                
                if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 12 ) )
                {
                    MSG( TBOX_MSG_DIRTYMAIL1ST_M, 0 );
                }
                else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 13 ) )
                {
                    MSG( TBOX_MSG_DIRTYMAIL1ST_F, 0 );
                }
                else 
                {
                    MSG( TBOX_MSG_DIRTYMAIL1ST_F, 0 );
                }

                MSG_WND_CLS();
                BIT_ON( 0 + 0x0800 + 0x0800 + 4081 );
            }

            localVariable19 = localVariable19 + 1;
            goto _49;
        }

    }

}


void dng_tbox_flag_set()
{
    int localVariable21 = FLD_GET_MAJOR();
    int localVariable22 = FLD_GET_MINOR();
    int localVariable23 = -1;
    int localVariable24 = -1;
    
    if ( localVariable21 == 151 || localVariable21 == 152 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 450;
        localVariable24 = 0 + 0x0800 + 0x0800 + 475;
    }
    else if ( localVariable21 == 153 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 850;
        localVariable24 = 0 + 0x0800 + 0x0800 + 875;
    }
    else if ( localVariable21 == 154 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 1250;
        localVariable24 = 0 + 0x0800 + 0x0800 + 1275;
    }
    else if ( localVariable21 == 155 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 1650;
        localVariable24 = 0 + 0x0800 + 0x0800 + 1675;
    }
    else if ( localVariable21 == 156 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 2050;
        localVariable24 = 0 + 0x0800 + 0x0800 + 2075;
    }
    else if ( localVariable21 == 157 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 2450;
        localVariable24 = 0 + 0x0800 + 0x0800 + 2475;
    }
    else if ( localVariable21 == 159 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 2950;
        localVariable24 = 0 + 0x0800 + 0x0800 + 2975;
    }
    else if ( localVariable21 == 161 || localVariable21 == 160 )
    {
        localVariable23 = 0 + 0x0800 + 0x0800 + 3350;
        localVariable24 = 0 + 0x0800 + 0x0800 + 3375;
    }

    
    if ( localVariable23 >= 0 && localVariable24 >= 0 )
    {
        
        if ( BIT_CHK( localVariable23 + 0 ) && BIT_CHK( localVariable24 + 0 ) )
        {
            BIT_OFF( localVariable24 + 0 );
        }
        else if ( BIT_CHK( localVariable23 + 1 ) && BIT_CHK( localVariable24 + 1 ) )
        {
            BIT_OFF( localVariable24 + 1 );
        }
        else if ( BIT_CHK( localVariable23 + 2 ) && BIT_CHK( localVariable24 + 2 ) )
        {
            BIT_OFF( localVariable24 + 2 );
        }
        else if ( BIT_CHK( localVariable23 + 3 ) && BIT_CHK( localVariable24 + 3 ) )
        {
            BIT_OFF( localVariable24 + 3 );
        }
        else if ( BIT_CHK( localVariable23 + 4 ) && BIT_CHK( localVariable24 + 4 ) )
        {
            BIT_OFF( localVariable24 + 4 );
        }
        else if ( BIT_CHK( localVariable23 + 5 ) && BIT_CHK( localVariable24 + 5 ) )
        {
            BIT_OFF( localVariable24 + 5 );
        }
        else if ( BIT_CHK( localVariable23 + 6 ) && BIT_CHK( localVariable24 + 6 ) )
        {
            BIT_OFF( localVariable24 + 6 );
        }
        else if ( BIT_CHK( localVariable23 + 7 ) && BIT_CHK( localVariable24 + 7 ) )
        {
            BIT_OFF( localVariable24 + 7 );
        }
        else if ( BIT_CHK( localVariable23 + 8 ) && BIT_CHK( localVariable24 + 8 ) )
        {
            BIT_OFF( localVariable24 + 8 );
        }
        else if ( BIT_CHK( localVariable23 + 9 ) && BIT_CHK( localVariable24 + 9 ) )
        {
            BIT_OFF( localVariable24 + 9 );
        }
        else if ( BIT_CHK( localVariable23 + 10 ) && BIT_CHK( localVariable24 + 10 ) )
        {
            BIT_OFF( localVariable24 + 10 );
        }
        else if ( BIT_CHK( localVariable23 + 11 ) && BIT_CHK( localVariable24 + 11 ) )
        {
            BIT_OFF( localVariable24 + 11 );
        }
        else if ( BIT_CHK( localVariable23 + 12 ) && BIT_CHK( localVariable24 + 12 ) )
        {
            BIT_OFF( localVariable24 + 12 );
        }
        else if ( BIT_CHK( localVariable23 + 13 ) && BIT_CHK( localVariable24 + 13 ) )
        {
            BIT_OFF( localVariable24 + 13 );
        }
        else if ( BIT_CHK( localVariable23 + 14 ) && BIT_CHK( localVariable24 + 14 ) )
        {
            BIT_OFF( localVariable24 + 14 );
        }
        else if ( BIT_CHK( localVariable23 + 15 ) && BIT_CHK( localVariable24 + 15 ) )
        {
            BIT_OFF( localVariable24 + 15 );
        }
        else if ( BIT_CHK( localVariable23 + 0x10 ) && BIT_CHK( localVariable24 + 0x10 ) )
        {
            BIT_OFF( localVariable24 + 0x10 );
        }
        else if ( BIT_CHK( localVariable23 + 17 ) && BIT_CHK( localVariable24 + 17 ) )
        {
            BIT_OFF( localVariable24 + 17 );
        }
        else if ( BIT_CHK( localVariable23 + 18 ) && BIT_CHK( localVariable24 + 18 ) )
        {
            BIT_OFF( localVariable24 + 18 );
        }
        else if ( BIT_CHK( localVariable23 + 19 ) && BIT_CHK( localVariable24 + 19 ) )
        {
            BIT_OFF( localVariable24 + 19 );
        }
        else if ( BIT_CHK( localVariable23 + 20 ) && BIT_CHK( localVariable24 + 20 ) )
        {
            BIT_OFF( localVariable24 + 20 );
        }
        else if ( BIT_CHK( localVariable23 + 21 ) && BIT_CHK( localVariable24 + 21 ) )
        {
            BIT_OFF( localVariable24 + 21 );
        }
        else if ( BIT_CHK( localVariable23 + 22 ) && BIT_CHK( localVariable24 + 22 ) )
        {
            BIT_OFF( localVariable24 + 22 );
        }
        else if ( BIT_CHK( localVariable23 + 23 ) && BIT_CHK( localVariable24 + 23 ) )
        {
            BIT_OFF( localVariable24 + 23 );
        }
        else if ( BIT_CHK( localVariable23 + 24 ) && BIT_CHK( localVariable24 + 24 ) )
        {
            BIT_OFF( localVariable24 + 24 );
        }

    }

}


void error_tbox()
{
    MSG_WND_DSP();
    MSG( DUMMY_MSG, 0 );
    MSG_WND_CLS();
}


void Field_SHORTCUT()
{
    BIT_ON( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 57 );
    AT_D_SHORTCUT_SYS();
    
    if ( variable26 > 0 )
    {
        int localVariable27 = FLD_SEL_EX( 4, 9, 0, variable26, 1 );
        FLD_PANEL_MAP_PROC_SYNC( 0 );
    }

}


void dungeon_return_calendar()
{
    dungeon_return();
    CALL_CALENDAR();
}


void dungeon_return()
{
    FLD_SET_FIX_BGM( 0 );
    FLD_REQ_BGM();
    int localVariable29 = 0;
    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 76 ) )
    {
        FLD_SET_LOCAL_COUNT( 49152 + 1, 0 );
        MVP_CHOICE();
        int localVariable28 = FLD_GET_LOCAL_COUNT( 49152 + 1 );
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 22 ) )
        {
            localVariable29 = 0;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) )
        {
            localVariable29 = 1;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 601 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) )
        {
            localVariable29 = 2;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1001 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) )
        {
            localVariable29 = 3;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1401 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1400 ) )
        {
            localVariable29 = 4;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1801 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) )
        {
            localVariable29 = 5;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2200 ) )
        {
            localVariable29 = 6;
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2701 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) )
        {
            localVariable29 = 7;
        }
        else 
        {
            localVariable29 = 0;
        }

        PUTS( "************************" );
        PUTS( "************************" );
        PUT( localVariable28 );
        PUTS( "------------------------" );
        PUT( localVariable29 );
        PUTS( "************************" );
        PUTS( "************************" );
        FLD_DUNGEON_RESULT( localVariable29, localVariable28 );
        FLD_DUNGEON_RESULT_SYNC();
    }

    result_counter_clear();
    BIT_OFF( 0 + 0x0800 + 0x0800 + 77 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 78 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 122 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 68 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 80 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 81 );
    SET_COUNT( 160, 0 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 82 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 83 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 84 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 85 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 99 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 93 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 120 );
    FLD_PANEL_COIN_SET_ENABLE( 0 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 2685 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 2686 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 2687 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 2688 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 2689 );
    RECOVERY_ALL();
    RESET_INJECTION_EFFECT();
    BIT_OFF( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 20 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 22 );
    BIT_OFF( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 21 );
    FLD_RETRY_CLEAR();
    FLD_RETRY_BOSS_CLEAR();
    
    if ( BIT_CHK( 0 + 1087 ) )
    {
        int localVariable30 = GET_MONTH();
        int localVariable31 = GET_DAY();
        
        if ( CHK_DAYS( 4, 11 ) == 1 || CHK_DAYS( 4, 12 ) == 1 || CHK_DAYS( 4, 15 ) == 1 || CHK_DAYS( 4, 25 ) == 1 || CHK_DAYS( 5, 0x10 ) == 1 || CHK_DAYS( 6, 20 ) == 1 || CHK_DAYS( 7, 25 ) == 1 || CHK_DAYS( 8, 30 ) == 1 || CHK_DAYS( 9, 15 ) == 1 || CHK_DAYS( 9, 17 ) == 1 || CHK_DAYS( 10, 29 ) == 1 || CHK_DAYS( 11, 19 ) == 1 || CHK_DAYS( 11, 24 ) == 1 || CHK_DAYS( 12, 24 ) == 1 || BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) && !BIT_CHK( 0 + 1045 ) || BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) && !BIT_CHK( 0 + 1049 ) || BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) && !BIT_CHK( 0 + 1057 ) || BIT_CHK( 0 + 0x0800 + 0x0800 + 2202 ) && CHAT_CHECK_ARRIVAL( 162 ) == 0 && CHAT_CHECK_ARRIVAL( 163 ) == 0 && CHAT_CHECK_ARRIVAL( 165 ) == 0 || BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) && !BIT_CHK( 0 + 0x80 ) )
        {
            return;
        }
        else 
        {
            SET_NEXT_DAY( localVariable30, localVariable31, 6 );
        }

    }

}


void dungeon_exit_time_set()
{
    int localVariable32 = 0;
    int localVariable33 = 0;
    
    if ( BIT_CHK( 0 + 1087 ) )
    {
        localVariable32 = GET_MONTH();
        localVariable33 = GET_DAY();
        
        if ( CHK_DAYS( 4, 11 ) == 1 || CHK_DAYS( 4, 12 ) == 1 || CHK_DAYS( 4, 15 ) == 1 || CHK_DAYS( 4, 25 ) == 1 || CHK_DAYS( 5, 0x10 ) == 1 || CHK_DAYS( 6, 20 ) == 1 || CHK_DAYS( 7, 25 ) == 1 || CHK_DAYS( 8, 30 ) == 1 || CHK_DAYS( 9, 15 ) == 1 || CHK_DAYS( 9, 17 ) == 1 || CHK_DAYS( 10, 29 ) == 1 || CHK_DAYS( 11, 19 ) == 1 || CHK_DAYS( 11, 24 ) == 1 || CHK_DAYS( 12, 24 ) == 1 || BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) && !BIT_CHK( 0 + 1045 ) || BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) && !BIT_CHK( 0 + 1049 ) || BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) && !BIT_CHK( 0 + 1057 ) || BIT_CHK( 0 + 0x0800 + 0x0800 + 2202 ) && CHAT_CHECK_ARRIVAL( 162 ) == 0 && CHAT_CHECK_ARRIVAL( 163 ) == 0 && CHAT_CHECK_ARRIVAL( 165 ) == 0 || BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) && !BIT_CHK( 0 + 0x80 ) )
        {
            SET_NEXT_DAY( localVariable32, localVariable33, 5 );
        }
        else 
        {
            SET_NEXT_DAY( localVariable32, localVariable33, 6 );
        }

    }

}


void dungeon_start_format()
{
    RECOVERY_ALL();
    BIT_ON( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 20 );
    int localVariable34 = 0;
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 22 ) )
    {
        localVariable34 = GET_COUNT( 139 );
        SET_COUNT( 154, localVariable34 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) )
    {
        localVariable34 = GET_COUNT( 145 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 601 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) )
    {
        localVariable34 = GET_COUNT( 146 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1001 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) )
    {
        localVariable34 = GET_COUNT( 147 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1401 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1400 ) )
    {
        localVariable34 = GET_COUNT( 148 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1801 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) )
    {
        localVariable34 = GET_COUNT( 149 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2200 ) )
    {
        localVariable34 = GET_COUNT( 150 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2701 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) )
    {
        localVariable34 = GET_COUNT( 151 );
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 3101 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 3100 ) )
    {
        localVariable34 = GET_COUNT( 152 );
    }

    SET_COUNT( 174, localVariable34 );
}


void DUNGEON_START_SAVE()
{
    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 99 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 99 );
        FLD_RETRY_SAVE();
    }

}


void result_counter_clear()
{
}


void MVP_CHOICE()
{
    int localVariable37 = GET_COUNT( 222 );
    int localVariable38 = GET_COUNT( 223 );
    int localVariable39 = GET_COUNT( 224 );
    int localVariable40 = GET_COUNT( 225 );
    int localVariable41 = GET_COUNT( 226 );
    int localVariable42 = GET_COUNT( 227 );
    int localVariable43 = GET_COUNT( 229 );
    int localVariable44 = GET_COUNT( 228 );
    int localVariable45 = GET_COUNT( 230 );
    int localVariable35 = 0;
    int localVariable36 = 0;
    int localVariable46 = GET_COUNT( 177 );
    
    if ( localVariable46 >= 5 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 54 ) && localVariable43 >= 10 )
        {
            localVariable35 = 7;
            SET_COUNT( 229, 0 );
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 48 ) && localVariable38 > 0 )
        {
            localVariable35 = 2;
            localVariable36 = localVariable38;
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 49 ) && localVariable39 > 0 && localVariable39 >= localVariable36 )
        {
            localVariable35 = 3;
            localVariable36 = localVariable39;
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 50 ) && localVariable40 > 0 && localVariable40 >= localVariable36 )
        {
            localVariable35 = 4;
            localVariable36 = localVariable40;
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 51 ) && localVariable41 > 0 && localVariable41 >= localVariable36 )
        {
            localVariable35 = 5;
            localVariable36 = localVariable41;
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 52 ) && localVariable42 > 0 && localVariable42 >= localVariable36 )
        {
            localVariable35 = 6;
            localVariable36 = localVariable42;
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 53 ) && localVariable44 > 0 && localVariable44 >= localVariable36 )
        {
            localVariable35 = 8;
            localVariable36 = localVariable44;
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 55 ) && localVariable45 > 0 && localVariable45 >= localVariable36 )
        {
            localVariable35 = 9;
            localVariable36 = localVariable45;
        }

        
        if ( localVariable36 == 0 )
        {
            localVariable35 = 1;
        }
        else if ( localVariable37 > localVariable36 && !BIT_CHK( 0 + 0x0800 + 0x0800 + 79 ) )
        {
            localVariable35 = 1;
        }

        FLD_SET_LOCAL_COUNT( 49152 + 1, localVariable35 );
        
        if ( localVariable35 != 1 )
        {
            BIT_OFF( 0 + 0x0800 + 0x0800 + 79 );
        }

    }
    else 
    {
        FLD_SET_LOCAL_COUNT( 49152 + 1, 1 );
    }

}


void ENTRANCE_FLAG_SET()
{
    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 48 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 179 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 179 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 49 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 180 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 180 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 50 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 181 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 181 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 51 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 182 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 182 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 52 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 183 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 183 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 53 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 184 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 184 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 54 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 185 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 185 );
    }

    
    if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 55 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 186 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0800 + 0x0800 + 186 );
    }

}


void ENTRANCE_NPC_GET_ID()
{
    FLD_NPC_SYNC();
    variable50 = FLD_NPCID_SEARCH_RESHND2( 299, 702 );
    variable51 = FLD_NPCID_SEARCH_RESHND2( 399, 703 );
    variable52 = FLD_NPCID_SEARCH_RESHND2( 499, 704 );
    variable53 = FLD_NPCID_SEARCH_RESHND2( 599, 705 );
    variable54 = FLD_NPCID_SEARCH_RESHND2( 699, 706 );
    variable55 = FLD_NPCID_SEARCH_RESHND2( 799, 707 );
    variable56 = FLD_NPCID_SEARCH_RESHND2( 899, 708 );
    variable57 = FLD_NPCID_SEARCH_RESHND2( 999, 709 );
    PUTS( "************************" );
    PUTS( "************************" );
    int localVariable49 = 0;
    
    if ( localVariable49 == -1 )
    {
        PUTS( "PC01:NG" );
    }
    else 
    {
        PUTS( "PC01:OK" );
    }

    
    if ( variable50 == -1 )
    {
        PUTS( "PC02:NG" );
    }
    else 
    {
        PUTS( "PC02:OK" );
    }

    
    if ( variable51 == -1 )
    {
        PUTS( "PC03:NG" );
    }
    else 
    {
        PUTS( "PC03:OK" );
    }

    
    if ( variable52 == -1 )
    {
        PUTS( "PC04:NG" );
    }
    else 
    {
        PUTS( "PC04:OK" );
    }

    
    if ( variable53 == -1 )
    {
        PUTS( "PC05:NG" );
    }
    else 
    {
        PUTS( "PC05:OK" );
    }

    
    if ( variable54 == -1 )
    {
        PUTS( "PC06:NG" );
    }
    else 
    {
        PUTS( "PC06:OK" );
    }

    
    if ( variable55 == -1 )
    {
        PUTS( "PC07:NG" );
    }
    else 
    {
        PUTS( "PC07:OK" );
    }

    
    if ( variable56 == -1 )
    {
        PUTS( "PC08:NG" );
    }
    else 
    {
        PUTS( "PC08:OK" );
    }

    
    if ( variable57 == -1 )
    {
        PUTS( "PC09:NG" );
    }
    else 
    {
        PUTS( "PC09:OK" );
    }

    PUTS( "************************" );
    PUTS( "************************" );
}


void ENTRANCE_NPC_GET_OFF()
{
    
    if ( variable50 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable50, 0, 0 );
    }

    
    if ( variable51 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable51, 0, 0 );
    }

    
    if ( variable52 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable52, 0, 0 );
    }

    
    if ( variable53 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable53, 0, 0 );
    }

    
    if ( variable54 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable54, 0, 0 );
    }

    
    if ( variable55 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable55, 0, 0 );
    }

    
    if ( variable56 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable56, 0, 0 );
    }

    
    if ( variable57 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable57, 0, 0 );
    }

}


void ENTRANCE_NPC_GET_ON()
{
    
    if ( variable50 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable50, 1, 10 );
    }

    
    if ( variable51 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable51, 1, 10 );
    }

    
    if ( variable52 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable52, 1, 10 );
    }

    
    if ( variable53 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable53, 1, 10 );
    }

    
    if ( variable54 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable54, 1, 10 );
    }

    
    if ( variable55 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable55, 1, 10 );
    }

    
    if ( variable56 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable56, 1, 10 );
    }

    
    if ( variable57 >= 0 )
    {
        FLD_MODEL_SET_VISIBLE( variable57, 1, 10 );
    }

}


void DUNGEON_ENTRANCE_NPC_OFF()
{
    int localVariable58 = 1;
    FLD_NPC_UNDISP( 702, localVariable58 );
    FLD_NPC_UNDISP( 703, localVariable58 );
    FLD_NPC_UNDISP( 704, localVariable58 );
    FLD_NPC_UNDISP( 705, localVariable58 );
    FLD_NPC_UNDISP( 706, localVariable58 );
    FLD_NPC_UNDISP( 707, localVariable58 );
    FLD_NPC_UNDISP( 708, localVariable58 );
    FLD_NPC_UNDISP( 709, localVariable58 );
}


void DUNGEON_ENTRANCE_NPC_ON()
{
    int localVariable59 = 0;
    FLD_NPC_UNDISP( 702, localVariable59 );
    FLD_NPC_UNDISP( 703, localVariable59 );
    FLD_NPC_UNDISP( 704, localVariable59 );
    FLD_NPC_UNDISP( 705, localVariable59 );
    FLD_NPC_UNDISP( 706, localVariable59 );
    FLD_NPC_UNDISP( 707, localVariable59 );
    FLD_NPC_UNDISP( 708, localVariable59 );
    FLD_NPC_UNDISP( 709, localVariable59 );
}


void DUNGEON_START_CHECK()
{
    _218:
    int localVariable60 = 0;
    int localVariable61 = 0;
    
    if ( 1 )
    {
        int localVariable62 = 0;
        SEL_MASK( localVariable62 );
        SEL_DEFKEY( 14, 2 );
        localVariable60 = SEL( START_CHECK_SEL );
        MSG_WND_CLS();
        
        if ( localVariable60 == 0 )
        {
            localVariable61 = GET_COUNT( 157 );
            SET_COUNT( 159, localVariable61 );
            goto _219;
        }
        else if ( localVariable60 == 1 )
        {
            PALACE_IN_CHECK_OK_MES_SET();
            SET_COUNT( 159, 0 );
            goto _219;
        }
        else if ( localVariable60 == 2 )
        {
            PALACE_IN_CHECK_NG_MES_SET();
            SET_COUNT( 159, -1 );
            goto _219;
        }

        goto _218;
    }

    _219:
}


void PALACE_IN_CHECK_MES_SET()
{
    MSG_WND_DSP();
    MSG( START_CHECK_MES, 0 );
}


void PALACE_IN_CHECK_OK_MES_SET()
{
}


void PALACE_IN_CHECK_NG_MES_SET()
{
}


void DUNGEON_EXIT_CHECK()
{
    int localVariable68 = FLD_GET_MAJOR();
    int localVariable69 = FLD_GET_MINOR();
    int localVariable70 = FLD_PC_GET_RESHND( 0 );
    int localVariable71 = FLD_MODEL_CLONE_ADDMOTION( localVariable70, 54 );
    MDL_ANIM( localVariable71, 60 + 0, 0, 0, 1f );
    MDL_ANIM_NEXT( localVariable71, 60 + 1, 1, 0, 1f );
    int localVariable72 = FLD_ITEM_MODEL_LOAD( 39, 1 );
    FLD_MODEL_LOADSYNC( localVariable72 );
    FLD_MODEL_SET_VISIBLE( localVariable72, 1, 0 );
    FLD_MODEL_ATTACH_TRANSLATE( localVariable72, localVariable71, 101 );
    FLD_MODEL_ATTACH_ROTATE( localVariable72, localVariable71, 101 );
    FADEIN( 0, 10 );
    variable47 = FLD_CHOICE_REPORTER();
    int localVariable65 = 0;
    int localVariable73 = 0;
    
    if ( localVariable68 == 151 )
    {
        localVariable65 = D01_EXIT_MES;
    }
    else if ( localVariable68 == 153 )
    {
        localVariable65 = D02_EXIT_MES;
    }
    else if ( localVariable68 == 154 )
    {
        localVariable65 = D03_EXIT_MES;
    }
    else if ( localVariable68 == 155 )
    {
        localVariable65 = D04_EXIT_MES;
    }
    else if ( localVariable68 == 156 )
    {
        localVariable65 = D05_EXIT_MES;
    }
    else if ( localVariable68 == 157 )
    {
        localVariable65 = D06_EXIT_MES;
    }
    else if ( localVariable68 == 159 )
    {
        localVariable65 = D07_EXIT_MES;
    }
    else if ( localVariable68 == 190 )
    {
        localVariable65 = D08_EXIT_MES;
    }
    else 
    {
        localVariable65 = D01_EXIT_MES;
    }

    EXIT_MAIN_MES_SET();
    int localVariable67 = 0;
    localVariable67 = 1;
    int localVariable66 = 11;
    MSG_WND_DSP();
    MSG( variable48, 0 );
    SEL_DEFKEY( 14, 2 );
    SEL_MASK( localVariable67 );
    int localVariable64 = SEL( localVariable66 );
    MSG_WND_CLS();
    
    if ( localVariable64 == 0 )
    {
        EX_MODE();
        FLD_REQ_SCN_CHANGE( 1 );
        
        if ( localVariable72 > 0 )
        {
            FLD_MODEL_DETACH_TRANSLATE( localVariable72 );
            FLD_MODEL_DETACH_ROTATE( localVariable72 );
            FLD_MODEL_FREE( localVariable72 );
        }

        MDL_ANIM( localVariable71, 58, 1, 5, 1f );
        FLD_MODEL_REVERT_ADDMOTION( localVariable70, localVariable71 );
    }
    else if ( localVariable64 == 1 )
    {
        variable63 = 0;
        EX_MES_CHECK();
        
        if ( variable63 == 0 )
        {
            MSG_WND_DSP();
            MSG( localVariable65, 0 );
            MSG_WND_CLS();
        }

        localVariable73 = 0;
        
        if ( localVariable68 == 159 && GET_COUNT( 151 ) < 20000 )
        {
            localVariable73 = 1;
        }

        PUTS( "===============================" );
        PUTS( "*******************************" );
        PUT( localVariable73 );
        PUTS( "*******************************" );
        PUTS( "===============================" );
        
        if ( localVariable73 == 1 )
        {
            FADEOUT( 25, 10 );
            FADE_SYNC();
        }
        else 
        {
            FADEOUT( 0, 10 );
            FADE_SYNC();
        }

        FLD_LOCAL_FLAG_ON( 49152 + 48 );
        
        if ( localVariable72 > 0 )
        {
            FLD_MODEL_DETACH_TRANSLATE( localVariable72 );
            FLD_MODEL_DETACH_ROTATE( localVariable72 );
            FLD_MODEL_FREE( localVariable72 );
        }

        FLD_MODEL_ANIM( localVariable71, 58, 1, 5, 1f );
        FLD_MODEL_REVERT_ADDMOTION( localVariable70, localVariable71 );
    }
    else if ( localVariable64 == 2 )
    {
        EXIT_CANCEL_MES_SET();
        MSG_WND_DSP();
        MSG( variable48, 0 );
        MSG_WND_CLS();
        FLD_MODEL_ANIM( localVariable71, 60 + 2, 0, 3, 1f );
        WAIT( 10 );
        FADEOUT( 0, 10 );
        FLD_MODEL_ANIM_SYNC( localVariable71 );
        MDL_ANIM( localVariable71, 58, 1, 5, 1f );
        FLD_MODEL_REVERT_ADDMOTION( localVariable70, localVariable71 );
        FADE_SYNC();
        
        if ( localVariable72 > 0 )
        {
            FLD_MODEL_DETACH_TRANSLATE( localVariable72 );
            FLD_MODEL_DETACH_ROTATE( localVariable72 );
            FLD_MODEL_FREE( localVariable72 );
        }

        return;
    }

}


void DUNGEON_EXIT_CHECK_SC()
{
    int localVariable78 = FLD_GET_MAJOR();
    int localVariable79 = FLD_GET_MINOR();
    variable47 = FLD_CHOICE_REPORTER();
    int localVariable80 = 0;
    
    if ( localVariable79 != 1 )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 78 );
    }

    int localVariable74 = 0;
    
    if ( localVariable78 == 159 && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2705 ) )
    {
        D07_DUNGEON_EXIT_SC();
        return;
    }
    else 
    {
        EXIT_MAIN_MES_SET();
        int localVariable77 = 1;
        int localVariable76 = 11;
        
        if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 4 ) )
        {
            WAIT( 15 );
            FLD_SMP_EVENT_BEGIN( 0 );
        }

        MSG_WND_DSP();
        MSG( variable48, 0 );
        SEL_DEFKEY( 14, 2 );
        SEL_MASK( localVariable77 );
        localVariable74 = SEL( localVariable76 );
        MSG_WND_CLS();
        
        if ( localVariable74 == 1 )
        {
            variable63 = 0;
            EX_MES_CHECK();
            
            if ( variable63 == 0 )
            {
                EXIT_OK_MES_SET();
                MSG_WND_DSP();
                MSG( variable48, 0 );
                MSG_WND_CLS();
            }

            localVariable80 = 0;
            
            if ( localVariable78 == 159 && GET_COUNT( 151 ) < 20000 )
            {
                localVariable80 = 1;
            }

            PUTS( "===============================" );
            PUTS( "*******************************" );
            PUT( localVariable80 );
            PUTS( "*******************************" );
            PUTS( "===============================" );
            
            if ( localVariable80 == 1 )
            {
                FADEOUT( 25, 10 );
                FADE_SYNC();
            }
            else 
            {
                FADEOUT( 0, 10 );
                FADE_SYNC();
            }

            FLD_LOCAL_FLAG_ON( 49152 + 48 );
            
            if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 4 ) )
            {
                BIT_ON( 0 + 0x0800 + 0x0800 + 160 );
            }

        }
        else if ( localVariable74 == 2 )
        {
            EXIT_CANCEL_MES_SET();
            MSG_WND_DSP();
            MSG( variable48, 0 );
            MSG_WND_CLS();
        }

        
        if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 4 ) )
        {
            FLD_SMP_EVENT_END( 0 );
        }

    }

}


void EX_MODE()
{
    FLD_LOCAL_FLAG_ON( 49152 + 0x10 );
}


void D07_DUNGEON_EXIT_SC()
{
    WAIT( 15 );
    FLD_SMP_EVENT_BEGIN( 0 );
    MSG_WND_DSP();
    MSG( D07_DUNGEON_EXIT_SC_mes0, 0 );
    MSG_WND_CLS();
    FLD_SMP_EVENT_END( 0 );
}


void DUNGEON_EXIT_NG_ACTIVE()
{
    int localVariable83 = FLD_CHOICE_REPORTER();
    int localVariable81 = 0;
    int localVariable82 = 0;
    
    if ( localVariable83 == 0 )
    {
        
        if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 54 ) )
        {
            localVariable83 = 3;
        }
        else 
        {
            localVariable83 = 8;
        }

    }

    
    if ( localVariable81 == 0 )
    {
        
        if ( localVariable83 == 2 )
        {
            localVariable82 = 62;
        }
        else if ( localVariable83 == 3 )
        {
            localVariable82 = 63;
        }
        else if ( localVariable83 == 4 )
        {
            localVariable82 = 0x40;
        }
        else if ( localVariable83 == 5 )
        {
            localVariable82 = 65;
        }
        else if ( localVariable83 == 6 )
        {
            localVariable82 = 66;
        }
        else if ( localVariable83 == 8 )
        {
            localVariable82 = 67;
        }
        else if ( localVariable83 == 7 )
        {
            localVariable82 = 68;
        }
        else if ( localVariable83 == 9 )
        {
            localVariable82 = 69;
        }

    }

    PUTS( "*************************" );
    PUTS( "*************************" );
    PUT( localVariable83 );
    PUTS( "*************************" );
    PUTS( "*************************" );
    MSG_WND_DSP();
    MSG( localVariable82, 0 );
    MSG_WND_CLS();
}


void SUB_CHARACTER_CHOICE()
{
    variable47 = FLD_CHOICE_REPORTER();
}


void PARTY_LOOK_PLAYER()
{
    int localVariable87 = FLD_PC_GET_RESHND( 0 );
    float localFloatVariable0 = FLD_MODEL_GET_X_TRANSLATE( localVariable87 );
    float localFloatVariable1 = FLD_MODEL_GET_Y_TRANSLATE( localVariable87 );
    float localFloatVariable2 = FLD_MODEL_GET_Z_TRANSLATE( localVariable87 );
    int localVariable84 = FLD_PC_GET_RESHND( 1 );
    int localVariable85 = FLD_PC_GET_RESHND( 2 );
    int localVariable86 = FLD_PC_GET_RESHND( 3 );
    
    if ( localVariable84 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( localVariable84, localFloatVariable0, localFloatVariable1, localFloatVariable2, 0 );
    }

    
    if ( localVariable85 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( localVariable85, localFloatVariable0, localFloatVariable1, localFloatVariable2, 0 );
    }

    
    if ( localVariable86 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( localVariable86, localFloatVariable0, localFloatVariable1, localFloatVariable2, 0 );
    }

}


void EXIT_MAIN_MES_SET()
{
    int localVariable88 = FLD_GET_MAJOR();
    int localVariable89 = FLD_GET_MINOR();
    
    if ( localVariable88 == 190 && localVariable89 == 1 )
    {
        
        if ( variable47 == 2 )
        {
            variable48 = D01_EXIT_MES;
        }
        else if ( variable47 == 3 )
        {
            variable48 = D02_EXIT_MES;
        }
        else if ( variable47 == 4 )
        {
            variable48 = D03_EXIT_MES;
        }
        else if ( variable47 == 5 )
        {
            variable48 = D04_EXIT_MES;
        }
        else if ( variable47 == 6 )
        {
            variable48 = D05_EXIT_MES;
        }
        else if ( variable47 == 8 )
        {
            variable48 = D06_EXIT_MES;
        }
        else if ( variable47 == 7 )
        {
            variable48 = D07_EXIT_MES;
        }
        else if ( variable47 == 9 )
        {
            variable48 = D07_EXIT_MES;
        }
        else 
        {
            variable48 = D02_EXIT_MES;
        }

        return;
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 607 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 608 ) && GET_COUNT( 146 ) < 29000 )
    {
        variable48 = D02_MISSION_POINT_PC03_m;
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1402 ) && BIT_CHK( 0 + 0x0800 + 0x0800 + 1403 ) && GET_COUNT( 146 ) < 22000 )
    {
        variable48 = D03_FIRST_END_PC03_mes;
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2202 ) && GET_COUNT( 150 ) < 50000 )
    {
        variable48 = D06_FIRST_END_PC06_mes;
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2701 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2705 ) && GET_COUNT( 151 ) >= 15000 )
    {
        variable48 = D07_FIRST_END_PC03_mes;
        return;
    }

    int localVariable90 = 0;
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 209 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) )
    {
        localVariable90 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 609 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) )
    {
        localVariable90 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1010 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) )
    {
        localVariable90 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1410 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1400 ) )
    {
        localVariable90 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1806 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) )
    {
        localVariable90 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2214 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2200 ) )
    {
        localVariable90 = 1;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2703 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) )
    {
        localVariable90 = 1;
    }

    
    if ( localVariable90 == 1 )
    {
        variable48 = DUNGEON_ROUTE_COMP_PC03_;
        return;
    }

    
    if ( variable47 == 2 )
    {
        variable48 = DUNGEON_EXIT_01_PC02_mes;
    }
    else if ( variable47 == 3 )
    {
        variable48 = DUNGEON_EXIT_01_PC03_mes;
    }
    else if ( variable47 == 4 )
    {
        variable48 = DUNGEON_EXIT_01_PC04_mes;
    }
    else if ( variable47 == 5 )
    {
        variable48 = DUNGEON_EXIT_01_PC05_mes;
    }
    else if ( variable47 == 6 )
    {
        variable48 = DUNGEON_EXIT_01_PC06_mes;
    }
    else if ( variable47 == 8 )
    {
        variable48 = DUNGEON_EXIT_01_PC07_mes;
    }
    else if ( variable47 == 7 )
    {
        variable48 = DUNGEON_EXIT_01_PC08_mes;
    }
    else if ( variable47 == 9 )
    {
        variable48 = DUNGEON_EXIT_01_PC09_mes;
    }
    else 
    {
        variable48 = DUNGEON_EXIT_01_PC03_mes;
    }

}


void EXIT_OK_MES_SET()
{
    
    if ( variable47 == 2 )
    {
        variable48 = 39;
    }
    else if ( variable47 == 3 )
    {
        variable48 = 40;
    }
    else if ( variable47 == 4 )
    {
        variable48 = 41;
    }
    else if ( variable47 == 5 )
    {
        variable48 = 42;
    }
    else if ( variable47 == 6 )
    {
        variable48 = 43;
    }
    else if ( variable47 == 8 )
    {
        variable48 = 44;
    }
    else if ( variable47 == 7 )
    {
        variable48 = 45;
    }
    else if ( variable47 == 9 )
    {
        variable48 = 46;
    }

}


void EXIT_CANCEL_MES_SET()
{
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 205 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 206 ) )
    {
        variable48 = 50;
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 4 ) )
    {
        
        if ( !BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 54 ) )
        {
            variable48 = 52;
        }
        else 
        {
            variable48 = 56;
        }

        return;
    }

    
    if ( variable47 == 2 )
    {
        variable48 = 51;
    }
    else if ( variable47 == 3 )
    {
        variable48 = 52;
    }
    else if ( variable47 == 4 )
    {
        variable48 = 53;
    }
    else if ( variable47 == 5 )
    {
        variable48 = 54;
    }
    else if ( variable47 == 6 )
    {
        variable48 = 55;
    }
    else if ( variable47 == 8 )
    {
        variable48 = 56;
    }
    else if ( variable47 == 7 )
    {
        variable48 = 57;
    }
    else if ( variable47 == 9 )
    {
        variable48 = 58;
    }

}


void ALERT_MAX_EXIT()
{
    MSG_WND_DSP();
    MSG( ALERT_MAX_EXIT_mes00, 0 );
    MSG( ALERT_MAX_EXIT_mes01, 0 );
    MSG( ALERT_MAX_EXIT_mes02, 0 );
    MSG_WND_CLS();
}


void EX_MES_CHECK()
{
    int localVariable92 = FLD_GET_MAJOR();
    int localVariable93 = FLD_GET_MINOR();
    
    if ( localVariable92 == 151 || localVariable92 == 152 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 209 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) && GET_COUNT( 145 ) < 55000 )
        {
            MSG_WND_DSP();
            MSG( D01_04_e166_015_mes01, 0 );
            MSG_WND_CLS();
            MSG_WND_DSP();
            MSG( D01_04_e166_015_mes02, 0 );
            MSG_WND_CLS();
            MSG_WND_DSP();
            MSG( D01_04_e166_015_mes03, 0 );
            MSG_WND_CLS();
            variable63 = 1;
        }

    }
    else if ( localVariable92 == 153 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 609 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) && GET_COUNT( 146 ) < 50000 )
        {
            MSG_WND_DSP();
            MSG( D02_04_e210_240_mes01, 0 );
            MSG_WND_CLS();
            MSG_WND_DSP();
            MSG( D02_04_e210_240_mes02, 0 );
            MSG_WND_CLS();
            MSG_WND_DSP();
            MSG( D02_04_e210_240_mes03, 0 );
            MSG_WND_CLS();
            variable63 = 1;
        }

    }

}


void D_EXIT_EV_FIRST()
{
    int localVariable94 = 0;
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 22 ) )
    {
        localVariable94 = 190;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) )
    {
        localVariable94 = 151;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 601 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) )
    {
        localVariable94 = 153;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1001 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) )
    {
        localVariable94 = 154;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1401 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1400 ) )
    {
        localVariable94 = 155;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1801 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) )
    {
        localVariable94 = 156;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2200 ) )
    {
        localVariable94 = 157;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2701 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) )
    {
        localVariable94 = 159;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 3101 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 3100 ) )
    {
        localVariable94 = 160;
    }

    
    if ( localVariable94 == 151 || localVariable94 == 152 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 209 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) && GET_COUNT( 145 ) < 55000 )
        {
            SET_COUNT( 145, 55000 );
        }

        return;
    }
    else if ( localVariable94 == 153 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 607 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 608 ) && GET_COUNT( 146 ) < 29000 )
        {
            SET_COUNT( 146, 29050 );
            BIT_ON( 0 + 0x0800 + 0x0800 + 604 );
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 609 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) && GET_COUNT( 146 ) < 50000 )
        {
            SET_COUNT( 146, 50000 );
        }

        return;
    }
    else if ( localVariable94 == 154 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1010 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) && GET_COUNT( 147 ) < 70000 )
        {
            SET_COUNT( 147, 70000 );
        }

        return;
    }
    else if ( localVariable94 == 155 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1402 ) && BIT_CHK( 0 + 0x0800 + 0x0800 + 1403 ) && GET_COUNT( 148 ) >= 20000 && GET_COUNT( 148 ) < 30000 )
        {
            SET_COUNT( 148, 30000 );
        }

        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1408 ) )
        {
            BIT_ON( 0 + 0x0800 + 0x0800 + 1410 );
            SET_COUNT( 148, 70000 );
        }

        return;
    }
    else if ( localVariable94 == 156 )
    {
        return;
    }
    else if ( localVariable94 == 157 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2285 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2287 ) && GET_COUNT( 150 ) <= 11500 )
        {
            SET_COUNT( 150, 11500 );
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2202 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2203 ) && GET_COUNT( 150 ) <= 40000 )
        {
            SET_COUNT( 150, 40000 );
        }
        else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2214 ) && GET_COUNT( 150 ) <= 70000 )
        {
            SET_COUNT( 150, 70000 );
        }

        return;
    }
    else if ( localVariable94 == 159 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2701 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2705 ) )
        {
            BIT_ON( 0 + 0x0800 + 0x0800 + 2705 );
            SET_COUNT( 151, 19000 );
            BIT_ON( 0 + 0x0800 + 0x0800 + 76 );
        }

        return;
    }
    else if ( localVariable94 == 190 )
    {
        return;
    }

}


void D_EXIT_EV_SECOND()
{
    int localVariable96 = 0;
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 0x1000 + 0x0100 + 0x0100 + 22 ) )
    {
        localVariable96 = 190;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) )
    {
        localVariable96 = 151;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 601 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 600 ) )
    {
        localVariable96 = 153;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1001 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) )
    {
        localVariable96 = 154;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1401 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1400 ) )
    {
        localVariable96 = 155;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1801 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 1800 ) )
    {
        localVariable96 = 156;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2201 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2200 ) )
    {
        localVariable96 = 157;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 2701 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 2700 ) )
    {
        localVariable96 = 159;
    }
    else if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 3101 ) && !BIT_CHK( 0 + 0x0800 + 0x0800 + 3100 ) )
    {
        localVariable96 = 160;
    }

    
    if ( localVariable96 == 151 || localVariable96 == 152 )
    {
        return;
    }
    else if ( localVariable96 == 153 )
    {
        
        if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 604 ) && GET_COUNT( 146 ) == 29050 )
        {
            SET_COUNT( 146, 29000 );
            CALL_EVENT( 201, 1 );
        }

        return;
    }
    else if ( localVariable96 == 154 )
    {
        return;
    }
    else if ( localVariable96 == 155 )
    {
        return;
    }
    else if ( localVariable96 == 156 )
    {
        return;
    }
    else if ( localVariable96 == 157 )
    {
        return;
    }
    else if ( localVariable96 == 159 )
    {
        
        if ( GET_COUNT( 151 ) == 19000 )
        {
            BIT_OFF( 0 + 0x0800 + 0x0800 + 76 );
        }

        return;
    }
    else if ( localVariable96 == 190 )
    {
        return;
    }

}


void DUNGEON_EXIT_NG_EV()
{
    WAIT( 15 );
    FLD_SMP_EVENT_BEGIN( 0 );
    int localVariable98 = FLD_GET_MAJOR();
    int localVariable99 = FLD_GET_MINOR();
    
    if ( localVariable98 == 151 || localVariable98 == 152 )
    {
        MSG_WND_DSP();
        MSG( D01_EXIT_NG_EV01_mes01, 0 );
        MSG_WND_CLS();
    }

    FLD_SMP_EVENT_END( 0 );
}


void PALACE_START_EV()
{
    int localVariable100 = FLD_PC_GET_RESHND( 0 );
    int localVariable101 = FLD_PC_GET_RESHND( 1 );
    int localVariable102 = FLD_PC_GET_RESHND( 2 );
    int localVariable103 = FLD_PC_GET_RESHND( 3 );
    
    if ( localVariable100 > 0 )
    {
        float localFloatVariable3 = FLD_MODEL_GET_X_TRANSLATE( localVariable100 );
        float localFloatVariable4 = FLD_MODEL_GET_Y_TRANSLATE( localVariable100 );
        float localFloatVariable5 = FLD_MODEL_GET_Z_TRANSLATE( localVariable100 );
    }

    
    if ( localVariable101 > 0 )
    {
        float localFloatVariable6 = FLD_MODEL_GET_X_TRANSLATE( localVariable101 );
        float localFloatVariable7 = FLD_MODEL_GET_Y_TRANSLATE( localVariable101 );
        float localFloatVariable8 = FLD_MODEL_GET_Z_TRANSLATE( localVariable101 ) + 100;
    }

    
    if ( localVariable102 > 0 )
    {
        float localFloatVariable9 = FLD_MODEL_GET_X_TRANSLATE( localVariable102 );
        float localFloatVariable10 = FLD_MODEL_GET_Y_TRANSLATE( localVariable102 );
        float localFloatVariable11 = FLD_MODEL_GET_Z_TRANSLATE( localVariable102 ) - 100;
    }

    
    if ( localVariable103 > 0 )
    {
        float localFloatVariable12 = FLD_MODEL_GET_X_TRANSLATE( localVariable103 ) + 400;
        float localFloatVariable13 = FLD_MODEL_GET_Y_TRANSLATE( localVariable103 );
        float localFloatVariable14 = FLD_MODEL_GET_Z_TRANSLATE( localVariable103 ) + 100;
    }

    int localVariable104 = FLD_MODEL_CLONE_ADDMOTION( localVariable100, 255 );
    FLD_CAMERA_LOCK();
    int localVariable105 = FLD_CAMERA_READ( 151, 1, 100 );
    FLD_CAMERA_READ_SYNC( localVariable105 );
    MDL_ANIM( localVariable104, 60 + 0, 0, 0, 0f );
    SYNC();
    MDL_ANIM( localVariable104, 60 + 0, 0, 0, 1f );
    FLD_CAMERA_SET( localVariable105 );
    CAMERA_SET_RESRC( localVariable105, localVariable104 );
    FLD_CAMERA_ANIM( localVariable105, 0, 0, 0, 1f );
    FADEIN( 0, 10 );
    FADE_SYNC();
    WAIT( 85 );
    float localFloatVariable15 = FLD_CAMERA_GET_X_POS();
    float localFloatVariable16 = FLD_CAMERA_GET_Y_POS();
    float localFloatVariable17 = FLD_CAMERA_GET_Z_POS();
    float localFloatVariable18 = FLD_CAMERA_GET_X_ROT();
    float localFloatVariable19 = FLD_CAMERA_GET_Y_ROT();
    float localFloatVariable20 = FLD_CAMERA_GET_Z_ROT();
    float localFloatVariable21 = FLD_CAMERA_GET_W_ROT();
    float localFloatVariable22 = FLD_CAMERA_GET_FOVY();
    FLD_CAMERA_RESET();
    FLD_CAMERA_FREE( localVariable105 );
    FLD_CAMERA_LOCK_INTERP( localFloatVariable15, localFloatVariable16, localFloatVariable17, localFloatVariable18, localFloatVariable19, localFloatVariable20, localFloatVariable21, 0 );
    FLD_CAMERA_FOVY_INTERP( localFloatVariable22, 0 );
    MDL_ANIM( localVariable104, 58, 1, 0, 1f );
    FLD_MODEL_REVERT_ADDMOTION( localVariable100, localVariable104 );
    FLD_CAMERA_SYNC_INTERP();
    FLD_CAMERA_UNLOCK();
    FLD_CAMERA_SET_FIXED( localFloatVariable15, localFloatVariable16, localFloatVariable17, localFloatVariable18, localFloatVariable19, localFloatVariable20, localFloatVariable21 );
}


void NAVIGATOR_SAFE_SET()
{
    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 200 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 295 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 296 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 267 );
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1000 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 1074 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1388 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1075 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1048 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1087 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1040 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1032 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1065 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1066 );
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 1400 ) )
    {
        BIT_ON( 0 + 0x0800 + 0x0800 + 1437 );
        BIT_ON( 0 + 0x0800 + 0x0800 + 1749 );
    }

}


void auto_recover()
{
    FLD_PANEL_HIDE_DISABLE();
    int localVariable106 = FLD_CHECK_AUTO_RECOVER();
    
    if ( localVariable106 == 0 )
    {
        localVariable106 = FLD_SIMPLE_SYS_MSG( MSG_AUTO_RECOVER_CONF, 1, 1 );
        
        if ( localVariable106 == 1 )
        {
            FLD_USE_AUTO_RECOVER();
        }

    }
    else if ( localVariable106 == 1 )
    {
        FLD_SIMPLE_SYS_MSG( MSG_AUTO_RECOVER_FULL, 0, 1 );
    }
    else if ( localVariable106 == 2 )
    {
        FLD_SIMPLE_SYS_MSG( MSG_AUTO_RECOVER_NO_USER, 0, 1 );
    }

}


void sobj_recover()
{
    int localVariable107 = 109 + RND( 2 );
    FLD_REPORT_MSG_DTL( 8, 1, localVariable107, 0 );
    FLD_WAIT( 30 );
    FLD_SOBJ_RECOVER();
    FLD_REPORT_MSGSYNC_DTL( 8, 1, localVariable107, 0 );
    FLD_REPORT_FREE();
    MSG_WND_DSP();
    MSG_SYSTEM( SCHOBJ_SYSTEM );
    MSG_WND_CLS();
}


void AT_D_SHORTCUT_SYS()
{
    int localVariable109 = FLD_GET_MAJOR();
    int localVariable110 = FLD_GET_MINOR();
    int localVariable25 = 0;
    
    if ( FLD_CHECK_AT_DUNGEON() == 1 )
    {
        localVariable25 = 9;
    }
    else if ( localVariable109 >= 190 && localVariable109 <= 194 )
    {
        localVariable25 = 9;
    }
    else 
    {
        localVariable25 = 9;
    }

    int localVariable111 = FLD_GET_DNG_NO();
    int localVariable112 = FLD_GET_DNG_LEVEL();
    int localVariable113 = 0;
    
    if ( localVariable109 == 190 && localVariable110 == 1 )
    {
        localVariable113 = 1;
    }
    else if ( localVariable111 == 1 )
    {
        
        if ( localVariable112 == 2 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 2 )
    {
        
        if ( localVariable112 == 4 || localVariable112 == 7 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 3 )
    {
        
        if ( localVariable112 == 5 || localVariable112 == 8 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 4 )
    {
        
        if ( localVariable112 == 6 || localVariable112 == 10 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 5 )
    {
        
        if ( localVariable112 == 4 || localVariable112 == 8 || localVariable112 == 12 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 6 )
    {
        
        if ( localVariable112 == 5 || localVariable112 == 9 || localVariable112 == 13 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 7 )
    {
        
        if ( localVariable112 == 6 || localVariable112 == 10 || localVariable112 == 14 )
        {
            localVariable113 = 1;
        }

    }
    else if ( localVariable111 == 8 && localVariable112 == 1 )
    {
        localVariable113 = 1;
    }

    
    if ( BIT_CHK( 0 + 0x0800 + 0x0800 + 164 ) )
    {
        localVariable113 = 0;
    }

    int localVariable114 = 0;
    
    if ( localVariable109 == 190 && localVariable110 == 1 )
    {
        localVariable114 = 0;
    }
    else if ( FLD_CHECK_DNG_EDIT_FLOOR() == 0 )
    {
        
        if ( FLD_CHECK_DNG_FIND_PARTS( 0 ) == 1 )
        {
            localVariable114 = 1;
        }

    }
    else if ( localVariable113 == 1 )
    {
        localVariable114 = 1;
    }

    int localVariable115 = 0;
    
    if ( localVariable109 == 190 && localVariable110 == 1 )
    {
        localVariable115 = 0;
    }
    else if ( FLD_CHECK_DNG_EDIT_FLOOR() == 0 )
    {
        
        if ( FLD_CHECK_DNG_FIND_PARTS( 1 ) == 1 )
        {
            localVariable115 = 1;
        }

    }
    else if ( localVariable111 == 1 && localVariable112 == 2 || localVariable111 == 2 && localVariable112 == 7 || localVariable111 == 3 && localVariable112 == 8 || localVariable111 == 4 && localVariable112 == 10 || localVariable111 == 5 && localVariable112 == 12 || localVariable111 == 6 && localVariable112 == 13 || localVariable111 == 7 && localVariable112 == 14 )
    {
        
        if ( FLD_CHECK_DNG_TRAVERSE( localVariable111 + 1, 1 ) == 1 )
        {
            localVariable115 = 1;
        }

    }
    else if ( localVariable111 == 8 && localVariable112 == 1 )
    {
        localVariable115 = 0;
    }
    else if ( localVariable113 == 1 )
    {
        localVariable115 = 1;
    }

    variable26 = 131071;
    
    if ( localVariable113 == 1 )
    {
        variable26 = variable26 - 1;
        variable26 = variable26 - 8;
    }

    
    if ( localVariable115 == 1 )
    {
        variable26 = variable26 - 2;
    }

    
    if ( localVariable114 == 1 )
    {
        variable26 = variable26 - 4;
    }

    PUTS( "*******************************" );
    PUTS( "*******************************" );
    PUT( 131071 - variable26 );
    PUTS( "*******************************" );
    PUTS( "*******************************" );
}

